<!DOCTYPE html>
<html>
  <head>
    <% include lib.ejs %>
    <title><%- title%></title>
  </head>

  <body class="dark:bg-gray-900">
    <% include nav-bar.ejs %>
        <br><br><br>
    <div id="admin-app" class="px-8 py-4 w-full">
      <form class="flex w-full items-end">
        <div class="flex w-full items-end">
          <div class="mb-4 mr-8">
            <label
              class="block text-gray-700 text-sm font-bold mb-2 dark:text-gray-300"
              for="username"
            >
              Chọn học sinh
            </label>
            <select
              class="w-56 form-select appearance-none block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding bg-no-repeat border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none dark:bg-gray-800 dark:text-gray-200"
              aria-label="Chọn hs"
              v-model="formData.studentId"
              v-on:change="() => dataSource = null"
            >
              <option
                v-for="student in listAllStudent"
                :key="student.id"
                :value="student.id"
              >
                {{ student.id + ". " + student.name }}
              </option>
            </select>
            <label
              class="block text-gray-700 text-sm font-bold mb-2 dark:text-gray-300"
              for="username"
            >
              Chọn tuần
            </label>
            <select
              class="w-56 form-select appearance-none block w-full px-3 py-1.5 text-base font-normal text-gray-700 bg-white bg-clip-padding bg-no-repeat border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none dark:bg-gray-800 dark:text-gray-200"
              aria-label="Chọn hs"
              v-model="formData.week"
              v-on:change="() => dataSource = null"
            >
              <option
                v-for="week in listAllWeek"
                :key="week.id"
                :value="week.id"
              >
                {{ week.name }}
              </option>
            </select>

          </div>
          
        </div>
      </form>
      <div class="mb-4 mr-8">
        <button
        type="button"
        class="bg-indigo-600 hover:bg-indigo-900 text-white font-bold py-1.5 px-4 rounded"
        v-on:click="handleSearchv3"
      >
        Tra cứu
      </button>
      </div>
      <div>
        <div class="flex w-full mb-2 text-red-500">
          {{ error }}
        </div>
        <div class="flex w-full mb-2 text-green-500">
          {{ success }}
        </div>
      </div>
      <div class="w-full overflow-x-auto" v-if="dataSource?true:false">
        <table class="w-full">
          <thead class="bg-gray-100 dark:bg-gray-700">
            <tr>
              <th
                scope="col"
                class="whitespace-nowrap py-2 px-4 text-xs font-medium text-left text-gray-700 uppercase dark:text-gray-400"
              >
                Tiêu chí
              </th>
              <th
                scope="col"
                class="whitespace-nowrap py-2 px-4 text-xs font-medium text-left text-gray-700 uppercase dark:text-gray-400"
              >
                Điểm
              </th>
            </tr>
          </thead>
          <tbody>
            <!-- Product 1 -->
            <tr
              class="bg-white border-b dark:bg-gray-800 dark:border-gray-700"
              v-for="(eval, idRow) in evaluateColums"
              :key="eval.value"
              :class="idRow % 2 ? 'bg-gray-50' : '  bg-white'"
            >
              <td
                class="py-2 px-4 text-sm font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                {{ eval.label }}
              </td>
              <td
                class="py-2 px-4 text-sm font-medium text-gray-900 whitespace-nowrap dark:text-white"
              >
                <div v-if="dataSource[0]?true:false">
                  {{ dataSource[0][idRow] }}
                </div>
                <div v-if="dataSource.point?true:false">
                  {{ dataSource.point[idRow] }}
                </div>
                
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div><br><br><br><br><% include footer.ejs %>
  </body>
  <% include scripts.ejs %>
  <script src="https://unpkg.com/flowbite@1.3.4/dist/flowbite.js"></script>

  <script>
    const API_PATH = "<%= process.env.API_PATH %>";
    const ALL_STUDENTS = <%- JSON.stringify(ALL_STUDENTS) %>;
    const ALL_WEEKS = <%- JSON.stringify(ALL_WEEKS) %>;
    const EVALUATE_COLUMNS =  <%- JSON.stringify(EVALUATE_COLUMNS) %>;
    var app = new Vue({
      el: "#admin-app",
      data: {
        loading: false,
        error: null,
        success: null,
        listAllStudent: ALL_STUDENTS,
        listAllWeek: [{
          id: null,
          name: "Tổng các tuần",
        }, ...ALL_WEEKS],
        evaluateColums: [...EVALUATE_COLUMNS, {
          label: "Tổng",
          value: '17'
        }],
        formData: {
          studentId: null,
          week: null,
        },
        dataSource: null,

      },

      methods: {
      generateRequestHeader(customHeader = null) {
        return {
          headers: {
              'Content-Type': 'application/json',
              Authorization: 'Bearer ' + localStorage.getItem('token'),
          },
         }
      },
      async  handleSearchv3 (){
        this.error = null;
        if(!this.formData.studentId)
        {
               this.error ="Chọn học sinh để tra cứu"
               return;
        }else{
          if(!this.formData.week)
          {
              try {
                var today = new Date();
            // đếm số tuần giữa 2 ngày
            function countWeeks(date1, date2) {
              var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
              var firstDate = new Date(date1);
              var secondDate = new Date(date2);

              return Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay * 7)));
            }
            const reswek = countWeeks('2022-02-07', today);
                const res = await axios.get(API_PATH + 'searchh',{
                  params: {
                  ...this.formData
                  }})
                  //this.dataSource= res.data;
                  let dataSource = [];
                  let pushObject = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                  let studentPointArray = res.data;
                  //console.log(studentPointArray);
                  let total = 0;
                      studentPointArray?.forEach(eval =>{
                        eval.point.forEach((point, idPoint)=>{
                          pushObject[idPoint] += point;
                          
                          if([0,1,2,3].includes(idPoint)){
                            total += point*5;
                          };
                          if([4,5,6,7,8].includes(idPoint)){
                            total -= point*10;
                          };
                          if([9,10,11].includes(idPoint)){
                            total -= point*20;
                          };
                          if([12].includes(idPoint)){
                            total -= point*10;
                          };
                          if([13,14].includes(idPoint)){
                            total -= point*50;
                          };
                          if([15].includes(idPoint)){
                            total -= point;
                          }
                        })
                      })
                      total += reswek * 100;
                      pushObject[pushObject.length - 1] = total;
                      dataSource.push(pushObject);
                      this.dataSource = dataSource;
              } catch (error) {
                  this.dataSource = null;
              } 
          }else{
              try {
                const res = await axios.get(API_PATH + 'search',{
                  params: {
                  ...this.formData
                  }})
                  let total = 0;
                  res.data.point.forEach((point, idPoint)=>{
                    if([0,1,2,3].includes(idPoint)){
                      total += point*5;
                    };
                    if([4,5,6,7,8].includes(idPoint)){
                      total -= point*10;
                    };
                    if([9,10,11].includes(idPoint)){
                      total -= point*20;
                    };
                    if([12].includes(idPoint)){
                      total -= point*10;
                    };
                    if([13,14].includes(idPoint)){
                      total -= point*50;
                    };
                    if([15].includes(idPoint)){
                      total -= point;
                    };
                  });
                  total += 100;
                  res.data.point.push(total);
                  this.dataSource= res.data;
              } catch (error) {
                  this.dataSource = null;
              }   
          }
        }
      }

    }});
  </script>
</html>
